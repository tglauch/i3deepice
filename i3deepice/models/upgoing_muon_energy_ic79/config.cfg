[Basics]
# low energy von 100 GeV-5 TeV, medium von 5 TeV-100 PeV

MC_path0 = /data/ana/Diffuse/IC2010-2014_NuMu/IC86-2012/datasets/finallevel/sim/2012/neutrino-generator/BDT_training/11029_00000-01999/
MC_path1 = /data/ana/Diffuse/IC2010-2014_NuMu/IC86-2012/datasets/finallevel/sim/2012/neutrino-generator/BDT_training/11069_00000-00999/
MC_path2 = /data/ana/Diffuse/IC2010-2014_NuMu/IC86-2012/datasets/finallevel/sim/2012/neutrino-generator/BDT_training/11070_00000-00999/

thisfolder = /data/user/tglauch/DeepIceLearning
geometry_file = /cvmfs/icecube.opensciencegrid.org/data/GCD/GeoCalibDetectorStatus_2013.56429_V0.i3.gz
icetray_path = /data/user/tglauch/Software/combo/build/env-shell.sh
python_env = /data/user/tglauch/DeepIceLearning/python_env/bin/activate
tray_script = /data/user/tglauch/DeepIceLearning/icetrays/energy_reco.py 

out_folder = /data/user/tglauch/trainings_data/diffuse_E_reco/
dagman_folder = /scratch/tglauch/diffuse_E_reco/
logger_path = /scratch/tglauch/diffuse_E_reco/log/
input_shape = auto

PulseSeriesMap = InIceDSTPulses

Waveforms = InIceRawData

## give a comma seperated list of foldes in MC_path to be processed, if 'allinmcpath' use all folders
folder_list = allinmcpath

## give a comma seperated list of files to search for in subfolders of MC_path. If 'allinfolder' use all files.
### use standart unix syntax for using files matching a special regular expression, e.g. *numu*
file_list = allinfolder


### use name charges (=pulses) times and widths (pulse width) to define input slices
[Input_Charges]
charge = np.sum(charges)
first_charge = charges[0]
charge_last = charges[-1]
num_pulses = len(charges)
charge_10ns = charge_after_time(charges, times, t=10)
charge_50ns = charge_after_time(charges, times, t=50) 
charge_100ns = charge_after_time(charges, times, t=100) 
charge_500ns = charge_after_time(charges, times, t=500)


[Input_Times]
time_first = np.amin(times) 
time_last = np.amax(times)
time_spread = np.amax(times)-np.amin(times)
time_std = np.std(times)
time_weighted_median = median(times, charges)


[Input_Pulses]
ignore = False
quantiles = 0.01, 0.03, 0.05, 0.08, 0.11, 0.15, 0.2, 0.5 , 0.8

[Input_Waveforms1]
ignore = True

[Cuts]
# maximum energy of events [GeV]
#max_energy_cut = OFF
#max_energy_cutoff = 100000000


[Variables]
trunc_E = ['SplineMPEICTruncatedEnergySPICEMie_AllDOMS_Muon'].energy
muex = ['SplineMPEICMuEXDifferential'].energy
spline_mpe_zenith = ['SplineMPEIC'].dir.zenith
spline_mpe_azimuth = ['SplineMPEIC'].dir.azimuth
spline_mpe_x = ['SplineMPEIC'].dir.x
spline_mpe_y = ['SplineMPEIC'].dir.y
spline_mpe_z = ['SplineMPEIC'].dir.z
pbf_err1 = ['SplineMPEICParaboloidFitParams'].pbfErr1
pbf_err2 = ['SplineMPEICParaboloidFitParams'].pbfErr2
pbf_center_llh = ['SplineMPEICParaboloidFitParams'].pbfCenterLlh
pbf_rot_ang = ['SplineMPEICParaboloidFitParams'].pbfRotAng
sigmaOK = ['SplineMPEICParaboloid'].fit_status.real
corsika_mult = ['CorsikaWeightMap']['Multiplicity']
n_events = ['I3MCWeightDict']['NEvents']
true_zen = ['MCPrimary1'].dir.zenith
true_az = ['MCPrimary1'].dir.azimuth
true_x = ['MCPrimary1'].dir.x
true_y = ['MCPrimary1'].dir.y
true_z = ['MCPrimary1'].dir.z
true_E = ['MCPrimary1'].energy
track_dir_x = ['visible_track'].dir.x
track_dir_y = ['visible_track'].dir.y
track_dir_z = ['visible_track'].dir.z
track_zenith = ['visible_track'].dir.zenith
track_azimuth = ['visible_track'].dir.azimuth
E_dep = ['mu_E_deposited'].value
E_on_entry = ['mu_E_on_entry'].value
E_dep_mctree = ['depE'].value
track_length =['track_length'].value
ev_id = ['I3EventHeader'].event_id
run_id = ['I3EventHeader'].run_id
IC_hitDOMs = ['IC_hit_doms'].value
DC_hitDOMs = ['DC_hit_doms'].value
interaction_x = ['first_interaction_pos'].pos.x
interaction_y = ['first_interaction_pos'].pos.y
interaction_z = ['first_interaction_pos'].pos.z
classification = ['classification'].value
signature = ['signature'].value

[Functions]
